export declare const typeDefs = "\n  type AggregateBoard {\n    count: Int!\n  }\n\n  type AggregatePost {\n    count: Int!\n  }\n\n  type AggregateThread {\n    count: Int!\n  }\n\n  type AggregateUser {\n    count: Int!\n  }\n\n  type BatchPayload {\n    count: Long!\n  }\n\n  type Board {\n    id: ID!\n    createdAt: DateTime!\n    admins(\n      where: UserWhereInput\n      orderBy: UserOrderByInput\n      skip: Int\n      after: String\n      before: String\n      first: Int\n      last: Int\n    ): [User!]\n    members(\n      where: UserWhereInput\n      orderBy: UserOrderByInput\n      skip: Int\n      after: String\n      before: String\n      first: Int\n      last: Int\n    ): [User!]\n    threads(\n      where: ThreadWhereInput\n      orderBy: ThreadOrderByInput\n      skip: Int\n      after: String\n      before: String\n      first: Int\n      last: Int\n    ): [Thread!]\n  }\n\n  type BoardConnection {\n    pageInfo: PageInfo!\n    edges: [BoardEdge]!\n    aggregate: AggregateBoard!\n  }\n\n  input BoardCreateInput {\n    admins: UserCreateManyInput\n    members: UserCreateManyInput\n    threads: ThreadCreateManyInput\n  }\n\n  type BoardEdge {\n    node: Board!\n    cursor: String!\n  }\n\n  enum BoardOrderByInput {\n    id_ASC\n    id_DESC\n    createdAt_ASC\n    createdAt_DESC\n    updatedAt_ASC\n    updatedAt_DESC\n  }\n\n  type BoardPreviousValues {\n    id: ID!\n    createdAt: DateTime!\n  }\n\n  type BoardSubscriptionPayload {\n    mutation: MutationType!\n    node: Board\n    updatedFields: [String!]\n    previousValues: BoardPreviousValues\n  }\n\n  input BoardSubscriptionWhereInput {\n    mutation_in: [MutationType!]\n    updatedFields_contains: String\n    updatedFields_contains_every: [String!]\n    updatedFields_contains_some: [String!]\n    node: BoardWhereInput\n    AND: [BoardSubscriptionWhereInput!]\n    OR: [BoardSubscriptionWhereInput!]\n    NOT: [BoardSubscriptionWhereInput!]\n  }\n\n  input BoardUpdateInput {\n    admins: UserUpdateManyInput\n    members: UserUpdateManyInput\n    threads: ThreadUpdateManyInput\n  }\n\n  input BoardWhereInput {\n    id: ID\n    id_not: ID\n    id_in: [ID!]\n    id_not_in: [ID!]\n    id_lt: ID\n    id_lte: ID\n    id_gt: ID\n    id_gte: ID\n    id_contains: ID\n    id_not_contains: ID\n    id_starts_with: ID\n    id_not_starts_with: ID\n    id_ends_with: ID\n    id_not_ends_with: ID\n    createdAt: DateTime\n    createdAt_not: DateTime\n    createdAt_in: [DateTime!]\n    createdAt_not_in: [DateTime!]\n    createdAt_lt: DateTime\n    createdAt_lte: DateTime\n    createdAt_gt: DateTime\n    createdAt_gte: DateTime\n    admins_every: UserWhereInput\n    admins_some: UserWhereInput\n    admins_none: UserWhereInput\n    members_every: UserWhereInput\n    members_some: UserWhereInput\n    members_none: UserWhereInput\n    threads_every: ThreadWhereInput\n    threads_some: ThreadWhereInput\n    threads_none: ThreadWhereInput\n    AND: [BoardWhereInput!]\n    OR: [BoardWhereInput!]\n    NOT: [BoardWhereInput!]\n  }\n\n  input BoardWhereUniqueInput {\n    id: ID\n  }\n\n  scalar DateTime\n\n  scalar Long\n\n  type Mutation {\n    createBoard(data: BoardCreateInput!): Board!\n    updateBoard(data: BoardUpdateInput!, where: BoardWhereUniqueInput!): Board\n    upsertBoard(\n      where: BoardWhereUniqueInput!\n      create: BoardCreateInput!\n      update: BoardUpdateInput!\n    ): Board!\n    deleteBoard(where: BoardWhereUniqueInput!): Board\n    deleteManyBoards(where: BoardWhereInput): BatchPayload!\n    createPost(data: PostCreateInput!): Post!\n    updatePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post\n    updateManyPosts(\n      data: PostUpdateManyMutationInput!\n      where: PostWhereInput\n    ): BatchPayload!\n    upsertPost(\n      where: PostWhereUniqueInput!\n      create: PostCreateInput!\n      update: PostUpdateInput!\n    ): Post!\n    deletePost(where: PostWhereUniqueInput!): Post\n    deleteManyPosts(where: PostWhereInput): BatchPayload!\n    createThread(data: ThreadCreateInput!): Thread!\n    updateThread(\n      data: ThreadUpdateInput!\n      where: ThreadWhereUniqueInput!\n    ): Thread\n    updateManyThreads(\n      data: ThreadUpdateManyMutationInput!\n      where: ThreadWhereInput\n    ): BatchPayload!\n    upsertThread(\n      where: ThreadWhereUniqueInput!\n      create: ThreadCreateInput!\n      update: ThreadUpdateInput!\n    ): Thread!\n    deleteThread(where: ThreadWhereUniqueInput!): Thread\n    deleteManyThreads(where: ThreadWhereInput): BatchPayload!\n    createUser(data: UserCreateInput!): User!\n    updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n    updateManyUsers(\n      data: UserUpdateManyMutationInput!\n      where: UserWhereInput\n    ): BatchPayload!\n    upsertUser(\n      where: UserWhereUniqueInput!\n      create: UserCreateInput!\n      update: UserUpdateInput!\n    ): User!\n    deleteUser(where: UserWhereUniqueInput!): User\n    deleteManyUsers(where: UserWhereInput): BatchPayload!\n  }\n\n  enum MutationType {\n    CREATED\n    UPDATED\n    DELETED\n  }\n\n  interface Node {\n    id: ID!\n  }\n\n  type PageInfo {\n    hasNextPage: Boolean!\n    hasPreviousPage: Boolean!\n    startCursor: String\n    endCursor: String\n  }\n\n  type Post {\n    id: ID!\n    author: User!\n    content: String\n    createdAt: DateTime!\n    published: Boolean!\n    title: String!\n    updatedAt: DateTime!\n  }\n\n  type PostConnection {\n    pageInfo: PageInfo!\n    edges: [PostEdge]!\n    aggregate: AggregatePost!\n  }\n\n  input PostCreateInput {\n    author: UserCreateOneWithoutPostsInput!\n    content: String\n    published: Boolean!\n    title: String!\n  }\n\n  input PostCreateManyInput {\n    create: [PostCreateInput!]\n    connect: [PostWhereUniqueInput!]\n  }\n\n  input PostCreateManyWithoutAuthorInput {\n    create: [PostCreateWithoutAuthorInput!]\n    connect: [PostWhereUniqueInput!]\n  }\n\n  input PostCreateOneInput {\n    create: PostCreateInput\n    connect: PostWhereUniqueInput\n  }\n\n  input PostCreateWithoutAuthorInput {\n    content: String\n    published: Boolean!\n    title: String!\n  }\n\n  type PostEdge {\n    node: Post!\n    cursor: String!\n  }\n\n  enum PostOrderByInput {\n    id_ASC\n    id_DESC\n    content_ASC\n    content_DESC\n    createdAt_ASC\n    createdAt_DESC\n    published_ASC\n    published_DESC\n    title_ASC\n    title_DESC\n    updatedAt_ASC\n    updatedAt_DESC\n  }\n\n  type PostPreviousValues {\n    id: ID!\n    content: String\n    createdAt: DateTime!\n    published: Boolean!\n    title: String!\n    updatedAt: DateTime!\n  }\n\n  input PostScalarWhereInput {\n    id: ID\n    id_not: ID\n    id_in: [ID!]\n    id_not_in: [ID!]\n    id_lt: ID\n    id_lte: ID\n    id_gt: ID\n    id_gte: ID\n    id_contains: ID\n    id_not_contains: ID\n    id_starts_with: ID\n    id_not_starts_with: ID\n    id_ends_with: ID\n    id_not_ends_with: ID\n    content: String\n    content_not: String\n    content_in: [String!]\n    content_not_in: [String!]\n    content_lt: String\n    content_lte: String\n    content_gt: String\n    content_gte: String\n    content_contains: String\n    content_not_contains: String\n    content_starts_with: String\n    content_not_starts_with: String\n    content_ends_with: String\n    content_not_ends_with: String\n    createdAt: DateTime\n    createdAt_not: DateTime\n    createdAt_in: [DateTime!]\n    createdAt_not_in: [DateTime!]\n    createdAt_lt: DateTime\n    createdAt_lte: DateTime\n    createdAt_gt: DateTime\n    createdAt_gte: DateTime\n    published: Boolean\n    published_not: Boolean\n    title: String\n    title_not: String\n    title_in: [String!]\n    title_not_in: [String!]\n    title_lt: String\n    title_lte: String\n    title_gt: String\n    title_gte: String\n    title_contains: String\n    title_not_contains: String\n    title_starts_with: String\n    title_not_starts_with: String\n    title_ends_with: String\n    title_not_ends_with: String\n    updatedAt: DateTime\n    updatedAt_not: DateTime\n    updatedAt_in: [DateTime!]\n    updatedAt_not_in: [DateTime!]\n    updatedAt_lt: DateTime\n    updatedAt_lte: DateTime\n    updatedAt_gt: DateTime\n    updatedAt_gte: DateTime\n    AND: [PostScalarWhereInput!]\n    OR: [PostScalarWhereInput!]\n    NOT: [PostScalarWhereInput!]\n  }\n\n  type PostSubscriptionPayload {\n    mutation: MutationType!\n    node: Post\n    updatedFields: [String!]\n    previousValues: PostPreviousValues\n  }\n\n  input PostSubscriptionWhereInput {\n    mutation_in: [MutationType!]\n    updatedFields_contains: String\n    updatedFields_contains_every: [String!]\n    updatedFields_contains_some: [String!]\n    node: PostWhereInput\n    AND: [PostSubscriptionWhereInput!]\n    OR: [PostSubscriptionWhereInput!]\n    NOT: [PostSubscriptionWhereInput!]\n  }\n\n  input PostUpdateDataInput {\n    author: UserUpdateOneRequiredWithoutPostsInput\n    content: String\n    published: Boolean\n    title: String\n  }\n\n  input PostUpdateInput {\n    author: UserUpdateOneRequiredWithoutPostsInput\n    content: String\n    published: Boolean\n    title: String\n  }\n\n  input PostUpdateManyDataInput {\n    content: String\n    published: Boolean\n    title: String\n  }\n\n  input PostUpdateManyInput {\n    create: [PostCreateInput!]\n    update: [PostUpdateWithWhereUniqueNestedInput!]\n    upsert: [PostUpsertWithWhereUniqueNestedInput!]\n    delete: [PostWhereUniqueInput!]\n    connect: [PostWhereUniqueInput!]\n    set: [PostWhereUniqueInput!]\n    disconnect: [PostWhereUniqueInput!]\n    deleteMany: [PostScalarWhereInput!]\n    updateMany: [PostUpdateManyWithWhereNestedInput!]\n  }\n\n  input PostUpdateManyMutationInput {\n    content: String\n    published: Boolean\n    title: String\n  }\n\n  input PostUpdateManyWithoutAuthorInput {\n    create: [PostCreateWithoutAuthorInput!]\n    delete: [PostWhereUniqueInput!]\n    connect: [PostWhereUniqueInput!]\n    set: [PostWhereUniqueInput!]\n    disconnect: [PostWhereUniqueInput!]\n    update: [PostUpdateWithWhereUniqueWithoutAuthorInput!]\n    upsert: [PostUpsertWithWhereUniqueWithoutAuthorInput!]\n    deleteMany: [PostScalarWhereInput!]\n    updateMany: [PostUpdateManyWithWhereNestedInput!]\n  }\n\n  input PostUpdateManyWithWhereNestedInput {\n    where: PostScalarWhereInput!\n    data: PostUpdateManyDataInput!\n  }\n\n  input PostUpdateOneRequiredInput {\n    create: PostCreateInput\n    update: PostUpdateDataInput\n    upsert: PostUpsertNestedInput\n    connect: PostWhereUniqueInput\n  }\n\n  input PostUpdateWithoutAuthorDataInput {\n    content: String\n    published: Boolean\n    title: String\n  }\n\n  input PostUpdateWithWhereUniqueNestedInput {\n    where: PostWhereUniqueInput!\n    data: PostUpdateDataInput!\n  }\n\n  input PostUpdateWithWhereUniqueWithoutAuthorInput {\n    where: PostWhereUniqueInput!\n    data: PostUpdateWithoutAuthorDataInput!\n  }\n\n  input PostUpsertNestedInput {\n    update: PostUpdateDataInput!\n    create: PostCreateInput!\n  }\n\n  input PostUpsertWithWhereUniqueNestedInput {\n    where: PostWhereUniqueInput!\n    update: PostUpdateDataInput!\n    create: PostCreateInput!\n  }\n\n  input PostUpsertWithWhereUniqueWithoutAuthorInput {\n    where: PostWhereUniqueInput!\n    update: PostUpdateWithoutAuthorDataInput!\n    create: PostCreateWithoutAuthorInput!\n  }\n\n  input PostWhereInput {\n    id: ID\n    id_not: ID\n    id_in: [ID!]\n    id_not_in: [ID!]\n    id_lt: ID\n    id_lte: ID\n    id_gt: ID\n    id_gte: ID\n    id_contains: ID\n    id_not_contains: ID\n    id_starts_with: ID\n    id_not_starts_with: ID\n    id_ends_with: ID\n    id_not_ends_with: ID\n    author: UserWhereInput\n    content: String\n    content_not: String\n    content_in: [String!]\n    content_not_in: [String!]\n    content_lt: String\n    content_lte: String\n    content_gt: String\n    content_gte: String\n    content_contains: String\n    content_not_contains: String\n    content_starts_with: String\n    content_not_starts_with: String\n    content_ends_with: String\n    content_not_ends_with: String\n    createdAt: DateTime\n    createdAt_not: DateTime\n    createdAt_in: [DateTime!]\n    createdAt_not_in: [DateTime!]\n    createdAt_lt: DateTime\n    createdAt_lte: DateTime\n    createdAt_gt: DateTime\n    createdAt_gte: DateTime\n    published: Boolean\n    published_not: Boolean\n    title: String\n    title_not: String\n    title_in: [String!]\n    title_not_in: [String!]\n    title_lt: String\n    title_lte: String\n    title_gt: String\n    title_gte: String\n    title_contains: String\n    title_not_contains: String\n    title_starts_with: String\n    title_not_starts_with: String\n    title_ends_with: String\n    title_not_ends_with: String\n    updatedAt: DateTime\n    updatedAt_not: DateTime\n    updatedAt_in: [DateTime!]\n    updatedAt_not_in: [DateTime!]\n    updatedAt_lt: DateTime\n    updatedAt_lte: DateTime\n    updatedAt_gt: DateTime\n    updatedAt_gte: DateTime\n    AND: [PostWhereInput!]\n    OR: [PostWhereInput!]\n    NOT: [PostWhereInput!]\n  }\n\n  input PostWhereUniqueInput {\n    id: ID\n  }\n\n  type Query {\n    board(where: BoardWhereUniqueInput!): Board\n    boards(\n      where: BoardWhereInput\n      orderBy: BoardOrderByInput\n      skip: Int\n      after: String\n      before: String\n      first: Int\n      last: Int\n    ): [Board]!\n    boardsConnection(\n      where: BoardWhereInput\n      orderBy: BoardOrderByInput\n      skip: Int\n      after: String\n      before: String\n      first: Int\n      last: Int\n    ): BoardConnection!\n    post(where: PostWhereUniqueInput!): Post\n    posts(\n      where: PostWhereInput\n      orderBy: PostOrderByInput\n      skip: Int\n      after: String\n      before: String\n      first: Int\n      last: Int\n    ): [Post]!\n    postsConnection(\n      where: PostWhereInput\n      orderBy: PostOrderByInput\n      skip: Int\n      after: String\n      before: String\n      first: Int\n      last: Int\n    ): PostConnection!\n    thread(where: ThreadWhereUniqueInput!): Thread\n    threads(\n      where: ThreadWhereInput\n      orderBy: ThreadOrderByInput\n      skip: Int\n      after: String\n      before: String\n      first: Int\n      last: Int\n    ): [Thread]!\n    threadsConnection(\n      where: ThreadWhereInput\n      orderBy: ThreadOrderByInput\n      skip: Int\n      after: String\n      before: String\n      first: Int\n      last: Int\n    ): ThreadConnection!\n    user(where: UserWhereUniqueInput!): User\n    users(\n      where: UserWhereInput\n      orderBy: UserOrderByInput\n      skip: Int\n      after: String\n      before: String\n      first: Int\n      last: Int\n    ): [User]!\n    usersConnection(\n      where: UserWhereInput\n      orderBy: UserOrderByInput\n      skip: Int\n      after: String\n      before: String\n      first: Int\n      last: Int\n    ): UserConnection!\n    node(id: ID!): Node\n  }\n\n  type Subscription {\n    board(where: BoardSubscriptionWhereInput): BoardSubscriptionPayload\n    post(where: PostSubscriptionWhereInput): PostSubscriptionPayload\n    thread(where: ThreadSubscriptionWhereInput): ThreadSubscriptionPayload\n    user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n  }\n\n  type Thread {\n    id: ID!\n    createdAt: DateTime!\n    author: User!\n    name: String!\n    entry: Post!\n    replies(\n      where: PostWhereInput\n      orderBy: PostOrderByInput\n      skip: Int\n      after: String\n      before: String\n      first: Int\n      last: Int\n    ): [Post!]\n  }\n\n  type ThreadConnection {\n    pageInfo: PageInfo!\n    edges: [ThreadEdge]!\n    aggregate: AggregateThread!\n  }\n\n  input ThreadCreateInput {\n    author: UserCreateOneInput!\n    name: String!\n    entry: PostCreateOneInput!\n    replies: PostCreateManyInput\n  }\n\n  input ThreadCreateManyInput {\n    create: [ThreadCreateInput!]\n    connect: [ThreadWhereUniqueInput!]\n  }\n\n  type ThreadEdge {\n    node: Thread!\n    cursor: String!\n  }\n\n  enum ThreadOrderByInput {\n    id_ASC\n    id_DESC\n    createdAt_ASC\n    createdAt_DESC\n    name_ASC\n    name_DESC\n    updatedAt_ASC\n    updatedAt_DESC\n  }\n\n  type ThreadPreviousValues {\n    id: ID!\n    createdAt: DateTime!\n    name: String!\n  }\n\n  input ThreadScalarWhereInput {\n    id: ID\n    id_not: ID\n    id_in: [ID!]\n    id_not_in: [ID!]\n    id_lt: ID\n    id_lte: ID\n    id_gt: ID\n    id_gte: ID\n    id_contains: ID\n    id_not_contains: ID\n    id_starts_with: ID\n    id_not_starts_with: ID\n    id_ends_with: ID\n    id_not_ends_with: ID\n    createdAt: DateTime\n    createdAt_not: DateTime\n    createdAt_in: [DateTime!]\n    createdAt_not_in: [DateTime!]\n    createdAt_lt: DateTime\n    createdAt_lte: DateTime\n    createdAt_gt: DateTime\n    createdAt_gte: DateTime\n    name: String\n    name_not: String\n    name_in: [String!]\n    name_not_in: [String!]\n    name_lt: String\n    name_lte: String\n    name_gt: String\n    name_gte: String\n    name_contains: String\n    name_not_contains: String\n    name_starts_with: String\n    name_not_starts_with: String\n    name_ends_with: String\n    name_not_ends_with: String\n    AND: [ThreadScalarWhereInput!]\n    OR: [ThreadScalarWhereInput!]\n    NOT: [ThreadScalarWhereInput!]\n  }\n\n  type ThreadSubscriptionPayload {\n    mutation: MutationType!\n    node: Thread\n    updatedFields: [String!]\n    previousValues: ThreadPreviousValues\n  }\n\n  input ThreadSubscriptionWhereInput {\n    mutation_in: [MutationType!]\n    updatedFields_contains: String\n    updatedFields_contains_every: [String!]\n    updatedFields_contains_some: [String!]\n    node: ThreadWhereInput\n    AND: [ThreadSubscriptionWhereInput!]\n    OR: [ThreadSubscriptionWhereInput!]\n    NOT: [ThreadSubscriptionWhereInput!]\n  }\n\n  input ThreadUpdateDataInput {\n    author: UserUpdateOneRequiredInput\n    name: String\n    entry: PostUpdateOneRequiredInput\n    replies: PostUpdateManyInput\n  }\n\n  input ThreadUpdateInput {\n    author: UserUpdateOneRequiredInput\n    name: String\n    entry: PostUpdateOneRequiredInput\n    replies: PostUpdateManyInput\n  }\n\n  input ThreadUpdateManyDataInput {\n    name: String\n  }\n\n  input ThreadUpdateManyInput {\n    create: [ThreadCreateInput!]\n    update: [ThreadUpdateWithWhereUniqueNestedInput!]\n    upsert: [ThreadUpsertWithWhereUniqueNestedInput!]\n    delete: [ThreadWhereUniqueInput!]\n    connect: [ThreadWhereUniqueInput!]\n    set: [ThreadWhereUniqueInput!]\n    disconnect: [ThreadWhereUniqueInput!]\n    deleteMany: [ThreadScalarWhereInput!]\n    updateMany: [ThreadUpdateManyWithWhereNestedInput!]\n  }\n\n  input ThreadUpdateManyMutationInput {\n    name: String\n  }\n\n  input ThreadUpdateManyWithWhereNestedInput {\n    where: ThreadScalarWhereInput!\n    data: ThreadUpdateManyDataInput!\n  }\n\n  input ThreadUpdateWithWhereUniqueNestedInput {\n    where: ThreadWhereUniqueInput!\n    data: ThreadUpdateDataInput!\n  }\n\n  input ThreadUpsertWithWhereUniqueNestedInput {\n    where: ThreadWhereUniqueInput!\n    update: ThreadUpdateDataInput!\n    create: ThreadCreateInput!\n  }\n\n  input ThreadWhereInput {\n    id: ID\n    id_not: ID\n    id_in: [ID!]\n    id_not_in: [ID!]\n    id_lt: ID\n    id_lte: ID\n    id_gt: ID\n    id_gte: ID\n    id_contains: ID\n    id_not_contains: ID\n    id_starts_with: ID\n    id_not_starts_with: ID\n    id_ends_with: ID\n    id_not_ends_with: ID\n    createdAt: DateTime\n    createdAt_not: DateTime\n    createdAt_in: [DateTime!]\n    createdAt_not_in: [DateTime!]\n    createdAt_lt: DateTime\n    createdAt_lte: DateTime\n    createdAt_gt: DateTime\n    createdAt_gte: DateTime\n    author: UserWhereInput\n    name: String\n    name_not: String\n    name_in: [String!]\n    name_not_in: [String!]\n    name_lt: String\n    name_lte: String\n    name_gt: String\n    name_gte: String\n    name_contains: String\n    name_not_contains: String\n    name_starts_with: String\n    name_not_starts_with: String\n    name_ends_with: String\n    name_not_ends_with: String\n    entry: PostWhereInput\n    replies_every: PostWhereInput\n    replies_some: PostWhereInput\n    replies_none: PostWhereInput\n    AND: [ThreadWhereInput!]\n    OR: [ThreadWhereInput!]\n    NOT: [ThreadWhereInput!]\n  }\n\n  input ThreadWhereUniqueInput {\n    id: ID\n  }\n\n  type User {\n    id: ID!\n    nationality: String\n    email: String!\n    name: String\n    posts(\n      where: PostWhereInput\n      orderBy: PostOrderByInput\n      skip: Int\n      after: String\n      before: String\n      first: Int\n      last: Int\n    ): [Post!]\n  }\n\n  type UserConnection {\n    pageInfo: PageInfo!\n    edges: [UserEdge]!\n    aggregate: AggregateUser!\n  }\n\n  input UserCreateInput {\n    nationality: String\n    email: String!\n    name: String\n    posts: PostCreateManyWithoutAuthorInput\n  }\n\n  input UserCreateManyInput {\n    create: [UserCreateInput!]\n    connect: [UserWhereUniqueInput!]\n  }\n\n  input UserCreateOneInput {\n    create: UserCreateInput\n    connect: UserWhereUniqueInput\n  }\n\n  input UserCreateOneWithoutPostsInput {\n    create: UserCreateWithoutPostsInput\n    connect: UserWhereUniqueInput\n  }\n\n  input UserCreateWithoutPostsInput {\n    nationality: String\n    email: String!\n    name: String\n  }\n\n  type UserEdge {\n    node: User!\n    cursor: String!\n  }\n\n  enum UserOrderByInput {\n    id_ASC\n    id_DESC\n    nationality_ASC\n    nationality_DESC\n    email_ASC\n    email_DESC\n    name_ASC\n    name_DESC\n    createdAt_ASC\n    createdAt_DESC\n    updatedAt_ASC\n    updatedAt_DESC\n  }\n\n  type UserPreviousValues {\n    id: ID!\n    nationality: String\n    email: String!\n    name: String\n  }\n\n  input UserScalarWhereInput {\n    id: ID\n    id_not: ID\n    id_in: [ID!]\n    id_not_in: [ID!]\n    id_lt: ID\n    id_lte: ID\n    id_gt: ID\n    id_gte: ID\n    id_contains: ID\n    id_not_contains: ID\n    id_starts_with: ID\n    id_not_starts_with: ID\n    id_ends_with: ID\n    id_not_ends_with: ID\n    nationality: String\n    nationality_not: String\n    nationality_in: [String!]\n    nationality_not_in: [String!]\n    nationality_lt: String\n    nationality_lte: String\n    nationality_gt: String\n    nationality_gte: String\n    nationality_contains: String\n    nationality_not_contains: String\n    nationality_starts_with: String\n    nationality_not_starts_with: String\n    nationality_ends_with: String\n    nationality_not_ends_with: String\n    email: String\n    email_not: String\n    email_in: [String!]\n    email_not_in: [String!]\n    email_lt: String\n    email_lte: String\n    email_gt: String\n    email_gte: String\n    email_contains: String\n    email_not_contains: String\n    email_starts_with: String\n    email_not_starts_with: String\n    email_ends_with: String\n    email_not_ends_with: String\n    name: String\n    name_not: String\n    name_in: [String!]\n    name_not_in: [String!]\n    name_lt: String\n    name_lte: String\n    name_gt: String\n    name_gte: String\n    name_contains: String\n    name_not_contains: String\n    name_starts_with: String\n    name_not_starts_with: String\n    name_ends_with: String\n    name_not_ends_with: String\n    AND: [UserScalarWhereInput!]\n    OR: [UserScalarWhereInput!]\n    NOT: [UserScalarWhereInput!]\n  }\n\n  type UserSubscriptionPayload {\n    mutation: MutationType!\n    node: User\n    updatedFields: [String!]\n    previousValues: UserPreviousValues\n  }\n\n  input UserSubscriptionWhereInput {\n    mutation_in: [MutationType!]\n    updatedFields_contains: String\n    updatedFields_contains_every: [String!]\n    updatedFields_contains_some: [String!]\n    node: UserWhereInput\n    AND: [UserSubscriptionWhereInput!]\n    OR: [UserSubscriptionWhereInput!]\n    NOT: [UserSubscriptionWhereInput!]\n  }\n\n  input UserUpdateDataInput {\n    nationality: String\n    email: String\n    name: String\n    posts: PostUpdateManyWithoutAuthorInput\n  }\n\n  input UserUpdateInput {\n    nationality: String\n    email: String\n    name: String\n    posts: PostUpdateManyWithoutAuthorInput\n  }\n\n  input UserUpdateManyDataInput {\n    nationality: String\n    email: String\n    name: String\n  }\n\n  input UserUpdateManyInput {\n    create: [UserCreateInput!]\n    update: [UserUpdateWithWhereUniqueNestedInput!]\n    upsert: [UserUpsertWithWhereUniqueNestedInput!]\n    delete: [UserWhereUniqueInput!]\n    connect: [UserWhereUniqueInput!]\n    set: [UserWhereUniqueInput!]\n    disconnect: [UserWhereUniqueInput!]\n    deleteMany: [UserScalarWhereInput!]\n    updateMany: [UserUpdateManyWithWhereNestedInput!]\n  }\n\n  input UserUpdateManyMutationInput {\n    nationality: String\n    email: String\n    name: String\n  }\n\n  input UserUpdateManyWithWhereNestedInput {\n    where: UserScalarWhereInput!\n    data: UserUpdateManyDataInput!\n  }\n\n  input UserUpdateOneRequiredInput {\n    create: UserCreateInput\n    update: UserUpdateDataInput\n    upsert: UserUpsertNestedInput\n    connect: UserWhereUniqueInput\n  }\n\n  input UserUpdateOneRequiredWithoutPostsInput {\n    create: UserCreateWithoutPostsInput\n    update: UserUpdateWithoutPostsDataInput\n    upsert: UserUpsertWithoutPostsInput\n    connect: UserWhereUniqueInput\n  }\n\n  input UserUpdateWithoutPostsDataInput {\n    nationality: String\n    email: String\n    name: String\n  }\n\n  input UserUpdateWithWhereUniqueNestedInput {\n    where: UserWhereUniqueInput!\n    data: UserUpdateDataInput!\n  }\n\n  input UserUpsertNestedInput {\n    update: UserUpdateDataInput!\n    create: UserCreateInput!\n  }\n\n  input UserUpsertWithoutPostsInput {\n    update: UserUpdateWithoutPostsDataInput!\n    create: UserCreateWithoutPostsInput!\n  }\n\n  input UserUpsertWithWhereUniqueNestedInput {\n    where: UserWhereUniqueInput!\n    update: UserUpdateDataInput!\n    create: UserCreateInput!\n  }\n\n  input UserWhereInput {\n    id: ID\n    id_not: ID\n    id_in: [ID!]\n    id_not_in: [ID!]\n    id_lt: ID\n    id_lte: ID\n    id_gt: ID\n    id_gte: ID\n    id_contains: ID\n    id_not_contains: ID\n    id_starts_with: ID\n    id_not_starts_with: ID\n    id_ends_with: ID\n    id_not_ends_with: ID\n    nationality: String\n    nationality_not: String\n    nationality_in: [String!]\n    nationality_not_in: [String!]\n    nationality_lt: String\n    nationality_lte: String\n    nationality_gt: String\n    nationality_gte: String\n    nationality_contains: String\n    nationality_not_contains: String\n    nationality_starts_with: String\n    nationality_not_starts_with: String\n    nationality_ends_with: String\n    nationality_not_ends_with: String\n    email: String\n    email_not: String\n    email_in: [String!]\n    email_not_in: [String!]\n    email_lt: String\n    email_lte: String\n    email_gt: String\n    email_gte: String\n    email_contains: String\n    email_not_contains: String\n    email_starts_with: String\n    email_not_starts_with: String\n    email_ends_with: String\n    email_not_ends_with: String\n    name: String\n    name_not: String\n    name_in: [String!]\n    name_not_in: [String!]\n    name_lt: String\n    name_lte: String\n    name_gt: String\n    name_gte: String\n    name_contains: String\n    name_not_contains: String\n    name_starts_with: String\n    name_not_starts_with: String\n    name_ends_with: String\n    name_not_ends_with: String\n    posts_every: PostWhereInput\n    posts_some: PostWhereInput\n    posts_none: PostWhereInput\n    AND: [UserWhereInput!]\n    OR: [UserWhereInput!]\n    NOT: [UserWhereInput!]\n  }\n\n  input UserWhereUniqueInput {\n    id: ID\n  }\n";
