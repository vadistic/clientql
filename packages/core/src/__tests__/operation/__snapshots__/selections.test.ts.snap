// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`selections complex props > selection on interface 1`] = `
"fragment EventFragment on Event {
  event {
    ...EventFlat
    venue {
      ...VenueFlat
    }
    ... on Concert {
      ...ConcertFlat
      venue {
        ...VenueFlat
      }
      previousVenues {
        ...VenueFlat
      }
      performingBand {
        ...PerformerFlat
      }
    }
    ... on Festival {
      ...FestivalFlat
      venue {
        ...VenueFlat
      }
      performers {
        ...PerformerFlat
      }
    }
    ... on Conference {
      ...ConferenceFlat
      venue {
        ...VenueFlat
      }
      speakers {
        ...SpeakerFlat
      }
    }
  }
}

fragment EventFlat on Event {
  id
  name
  startsAt
  endsAt
  minAgeRestriction
}

fragment VenueFlat on Venue {
  id
  name
  address
  maxOccupancy
}

fragment ConcertFlat on Concert {
  id
  name
  startsAt
  endsAt
  minAgeRestriction
}

fragment PerformerFlat on Performer {
  id
  name
  contact
  speciality
  fee
}

fragment FestivalFlat on Festival {
  id
  name
  startsAt
  endsAt
  minAgeRestriction
}

fragment ConferenceFlat on Conference {
  id
  name
  startsAt
  endsAt
  minAgeRestriction
  workshops
}

fragment SpeakerFlat on Speaker {
  id
  name
  contact
}
"
`;

exports[`selections prisma props > edges 1`] = `
"fragment BoardedgeFragment on BoardEdge {
  ...BoardEdgeFlat
  node {
    ...BoardFlat
    admins {
      ...UserFlat
      posts {
        ...PostFlat
      }
    }
    members {
      ...UserFlat
      posts {
        ...PostFlat
      }
    }
    threads {
      ...ThreadFlat
      author {
        ...UserFlat
      }
      entry {
        ...PostFlat
      }
      replies {
        ...PostFlat
      }
    }
  }
}

fragment BoardEdgeFlat on BoardEdge {
  cursor
}

fragment BoardFlat on Board {
  id
  createdAt
}

fragment UserFlat on User {
  id
  nationality
  email
  name
}

fragment PostFlat on Post {
  id
  content
  createdAt
  published
  title
  updatedAt
}

fragment ThreadFlat on Thread {
  id
  createdAt
  name
}
"
`;

exports[`selections prisma props > handle not very nested 1`] = `
"fragment PostFragment on Post {
  ...PostFlat
  author {
    ...UserFlat
  }
}

fragment PostFlat on Post {
  id
  content
  createdAt
  published
  title
  updatedAt
}

fragment UserFlat on User {
  id
  nationality
  email
  name
}
"
`;

exports[`selections vats props > ensure no empty flat fragments are generated 1`] = `
"fragment PageInfoFlat on PageInfo {
  hasNextPage
  hasPreviousPage
  startCursor
  endCursor
}

fragment ApplicationEdgeFlat on ApplicationEdge {
  cursor
}

fragment ApplicationFlat on Application {
  createdAt
  id
  updatedAt
  type
}

fragment DisqualificationInstanceFlat on DisqualificationInstance {
  id
  createdAt
  updatedAt
  content
}

fragment StageFlat on Stage {
  id
  createdAt
  updatedAt
  name
  description
  type
  index
}

fragment ReviewInstanceFlat on ReviewInstance {
  id
  createdAt
  updatedAt
  rating
  content
}

fragment JobFlat on Job {
  id
  createdAt
  updatedAt
  type
  department
  name
  excerpt
  companyDescription
  description
  requirements
}

fragment CandidateFlat on Candidate {
  id
  createdAt
  updatedAt
  firstName
  lastName
  emails
  phones
  links
  company
  headline
  position
  resumesString
  coverLettersString
}

fragment AggregateApplicationFlat on AggregateApplication {
  count
}"
`;

exports[`selections vats props > ensure no empty fragments are generated 1`] = `
"fragment PageInfoFlat on PageInfo {
  hasNextPage
  hasPreviousPage
  startCursor
  endCursor
}

fragment ApplicationEdgeFlat on ApplicationEdge {
  cursor
}

fragment ApplicationFlat on Application {
  createdAt
  id
  updatedAt
  type
}

fragment DisqualificationInstanceFlat on DisqualificationInstance {
  id
  createdAt
  updatedAt
  content
}

fragment StageFlat on Stage {
  id
  createdAt
  updatedAt
  name
  description
  type
  index
}

fragment ReviewInstanceFlat on ReviewInstance {
  id
  createdAt
  updatedAt
  rating
  content
}

fragment JobFlat on Job {
  id
  createdAt
  updatedAt
  type
  department
  name
  excerpt
  companyDescription
  description
  requirements
}

fragment CandidateFlat on Candidate {
  id
  createdAt
  updatedAt
  firstName
  lastName
  emails
  phones
  links
  company
  headline
  position
  resumesString
  coverLettersString
}

fragment AggregateApplicationFlat on AggregateApplication {
  count
}"
`;
