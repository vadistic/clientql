// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`operation complex > deep fragments 1`] = `
"query TODO($venueId: ID!) {
  findEventsAtVenue(venueId: $venueId) {
    ...EventDeep
  }
}

fragment EventDeep on Event {
  id
  name
  startsAt
  endsAt
  venue {
    ...VenueFlat
  }
  minAgeRestriction
  ... on Concert {
    ...ConcertDeep
  }
  ... on Festival {
    ...FestivalDeep
  }
  ... on Conference {
    ...ConferenceDeep
  }
}

fragment VenueFlat on Venue {
  id
  name
  address
  maxOccupancy
}

fragment ConcertDeep on Concert {
  id
  name
  startsAt
  endsAt
  venue {
    ...VenueFlat
  }
  previousVenues {
    ...VenueFlat
  }
  minAgeRestriction
  performingBand {
    ...PerformerFlat
  }
}

fragment PerformerFlat on Performer {
  id
  name
  contact
  speciality
  fee
}

fragment FestivalDeep on Festival {
  id
  name
  startsAt
  endsAt
  venue {
    ...VenueFlat
  }
  minAgeRestriction
  performers {
    ...PerformerFlat
  }
}

fragment ConferenceDeep on Conference {
  id
  name
  startsAt
  endsAt
  venue {
    ...VenueFlat
  }
  minAgeRestriction
  speakers {
    ...SpeakerFlat
  }
  workshops
}

fragment SpeakerFlat on Speaker {
  id
  name
  contact
}
"
`;

exports[`operation complex > interface target 1`] = `
"query TODO($venueId: ID!) {
  findEventsAtVenue(venueId: $venueId) {
    ...EventFlat
    venue {
      ...VenueFlat
    }
    ... on Concert {
      ...ConcertFlat
      venue {
        ...VenueFlat
      }
      previousVenues {
        ...VenueFlat
      }
      performingBand {
        ...PerformerFlat
      }
    }
    ... on Festival {
      ...FestivalFlat
      venue {
        ...VenueFlat
      }
      performers {
        ...PerformerFlat
      }
    }
    ... on Conference {
      ...ConferenceFlat
      venue {
        ...VenueFlat
      }
      speakers {
        ...SpeakerFlat
      }
    }
  }
}

fragment EventFlat on Event {
  id
  name
  startsAt
  endsAt
  minAgeRestriction
}

fragment VenueFlat on Venue {
  id
  name
  address
  maxOccupancy
}

fragment ConcertFlat on Concert {
  id
  name
  startsAt
  endsAt
  minAgeRestriction
}

fragment PerformerFlat on Performer {
  id
  name
  contact
  speciality
  fee
}

fragment FestivalFlat on Festival {
  id
  name
  startsAt
  endsAt
  minAgeRestriction
}

fragment ConferenceFlat on Conference {
  id
  name
  startsAt
  endsAt
  minAgeRestriction
  workshops
}

fragment SpeakerFlat on Speaker {
  id
  name
  contact
}
"
`;

exports[`operation prisma > nested query 1`] = `
"query TODO($where: UserWhereUniqueInput!, $where1: PostWhereInput, $orderBy1: PostOrderByInput, $skip1: Int, $after1: String, $before1: String, $first1: Int, $last1: Int) {
  user(where: $where) {
    posts(where: $where1, orderBy: $orderBy1, skip: $skip1, after: $after1, before: $before1, first: $first1, last: $last1) {
      ...PostFlat
      author {
        ...UserFlat
      }
    }
  }
}

fragment PostFlat on Post {
  id
  content
  createdAt
  published
  title
  updatedAt
}

fragment UserFlat on User {
  id
  nationality
  email
  name
}
"
`;

exports[`operation prisma > non nested multi query 1`] = `
"query TODO($where: UserWhereInput, $orderBy: UserOrderByInput, $skip: Int, $after: String, $before: String, $first: Int, $last: Int) {
  users(where: $where, orderBy: $orderBy, skip: $skip, after: $after, before: $before, first: $first, last: $last) {
    ...UserFlat
    posts {
      ...PostFlat
    }
  }
}

fragment UserFlat on User {
  id
  nationality
  email
  name
}

fragment PostFlat on Post {
  id
  content
  createdAt
  published
  title
  updatedAt
}
"
`;

exports[`operation prisma > non nested single query 1`] = `
"query TODO($where: UserWhereUniqueInput!) {
  user(where: $where) {
    ...UserFlat
    posts {
      ...PostFlat
    }
  }
}

fragment UserFlat on User {
  id
  nationality
  email
  name
}

fragment PostFlat on Post {
  id
  content
  createdAt
  published
  title
  updatedAt
}
"
`;
