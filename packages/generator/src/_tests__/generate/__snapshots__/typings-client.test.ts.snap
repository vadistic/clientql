// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generate typings > client match snapshot 1`] = `
"/*
 *
 * ROOT CLIENT
 *
 */

export interface Mutation {
  createPost: (args: { data: PostCreateInput }) => Post
  createUser: (args: { data: UserCreateInput }) => User
  deleteManyPosts: (args: { where?: PostWhereInput | null }) => BatchPayload
  deleteManyUsers: (args: { where?: UserWhereInput | null }) => BatchPayload
  deletePost: (args?: { where: PostWhereUniqueInput }) => Post | null
  deleteUser: (args?: { where: UserWhereUniqueInput }) => User | null
  updateManyPosts: (args: {
    data: PostUpdateManyMutationInput
    where?: PostWhereInput | null
  }) => BatchPayload
  updateManyUsers: (args: {
    data: UserUpdateManyMutationInput
    where?: UserWhereInput | null
  }) => BatchPayload
  updatePost: (args?: {
    data: PostUpdateInput
    where: PostWhereUniqueInput
  }) => Post | null
  updateUser: (args?: {
    data: UserUpdateInput
    where: UserWhereUniqueInput
  }) => User | null
  upsertPost: (args: {
    create: PostCreateInput
    update: PostUpdateInput
    where: PostWhereUniqueInput
  }) => Post
  upsertUser: (args: {
    create: UserCreateInput
    update: UserUpdateInput
    where: UserWhereUniqueInput
  }) => User
}

export interface Query {
  node: (args?: { id: string }) => Node | null
  post: (args?: { where: PostWhereUniqueInput }) => Post | null
  posts: (args: {
    after?: string | null
    before?: string | null
    first?: number | null
    last?: number | null
    orderBy?: PostOrderByInput | null
    skip?: number | null
    where?: PostWhereInput | null
  }) => Array<Post>
  postsConnection: (args: {
    after?: string | null
    before?: string | null
    first?: number | null
    last?: number | null
    orderBy?: PostOrderByInput | null
    skip?: number | null
    where?: PostWhereInput | null
  }) => PostConnection
  user: (args?: { where: UserWhereUniqueInput }) => User | null
  users: (args: {
    after?: string | null
    before?: string | null
    first?: number | null
    last?: number | null
    orderBy?: UserOrderByInput | null
    skip?: number | null
    where?: UserWhereInput | null
  }) => Array<User>
  usersConnection: (args: {
    after?: string | null
    before?: string | null
    first?: number | null
    last?: number | null
    orderBy?: UserOrderByInput | null
    skip?: number | null
    where?: UserWhereInput | null
  }) => UserConnection
}

/*
 *
 * CLIENTS
 *
 */

export interface AggregatePost {
  count: () => number
}

export interface AggregateUser {
  count: () => number
}

export interface BatchPayload {
  count: () => number
}

export interface PageInfo {
  endCursor: () => string | null
  hasNextPage: () => boolean
  hasPreviousPage: () => boolean
  startCursor: () => string | null
}

export interface Post {
  author: () => User
  content: () => string | null
  createdAt: () => string
  id: () => string
  published: () => boolean
  title: () => string
  updatedAt: () => string
}

export interface PostConnection {
  aggregate: () => AggregatePost
  edges: () => Array<PostEdge>
  pageInfo: () => PageInfo
}

export interface PostEdge {
  cursor: () => string
  node: () => Post
}

export interface User {
  email: () => string
  id: () => string
  name: () => string | null
  posts: (args?: {
    after?: string | null
    before?: string | null
    first?: number | null
    last?: number | null
    orderBy?: PostOrderByInput | null
    skip?: number | null
    where?: PostWhereInput | null
  }) => Array<Post> | null
}

export interface UserConnection {
  aggregate: () => AggregateUser
  edges: () => Array<UserEdge>
  pageInfo: () => PageInfo
}

export interface UserEdge {
  cursor: () => string
  node: () => User
}

"
`;
