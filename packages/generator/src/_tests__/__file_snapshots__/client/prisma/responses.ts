/*
 *
 * Code generated by Graphql Client Generator.
 * DO NOT EDIT.
 * Please don't change this file manually but run 'something' to update it.
 * For more information, please read the docs: https://doclink.com/
 *
 */

import {
  DateTime,
  Long,
  BoardOrderByInput,
  MutationType,
  PostOrderByInput,
  ThreadOrderByInput,
  UserOrderByInput
} from './types'

/*
 *
 * Responses
 *
 */

export type BoardResponse = BoardFlat & {
  admins?: UserFlat & {
    posts?: PostFlat
  }
  members?: UserFlat & {
    posts?: PostFlat
  }
  threads?: ThreadFlat & {
    author: UserFlat & {
      posts?: PostFlat
    }
    entry: PostFlat & {
      author: UserFlat
    }
    replies?: PostFlat & {
      author: UserFlat
    }
  }
}

export type UserResponse = UserFlat & {
  posts?: PostFlat
}

export type PostResponse = PostFlat & {
  author: UserFlat
}

export type ThreadResponse = ThreadFlat & {
  author: UserFlat & {
    posts?: PostFlat
  }
  entry: PostFlat & {
    author: UserFlat
  }
  replies?: PostFlat & {
    author: UserFlat
  }
}

export type BoardConnectionResponse = {
  __typename: 'BoardConnection'
  pageInfo: PageInfoFlat
  edges: BoardEdgeFlat & {
    node: BoardFlat & {
      admins?: UserFlat
      members?: UserFlat
      threads?: ThreadFlat
    }
  }
  aggregate: AggregateBoardFlat
}

export type PageInfoResponse = PageInfoFlat

export type BoardEdgeResponse = BoardEdgeFlat & {
  node: BoardFlat & {
    admins?: UserFlat & {
      posts?: PostFlat
    }
    members?: UserFlat & {
      posts?: PostFlat
    }
    threads?: ThreadFlat & {
      author: UserFlat
      entry: PostFlat
      replies?: PostFlat
    }
  }
}

export type AggregateBoardResponse = AggregateBoardFlat

export type PostConnectionResponse = {
  __typename: 'PostConnection'
  pageInfo: PageInfoFlat
  edges: PostEdgeFlat & {
    node: PostFlat & {
      author: UserFlat
    }
  }
  aggregate: AggregatePostFlat
}

export type PostEdgeResponse = PostEdgeFlat & {
  node: PostFlat & {
    author: UserFlat
  }
}

export type AggregatePostResponse = AggregatePostFlat

export type ThreadConnectionResponse = {
  __typename: 'ThreadConnection'
  pageInfo: PageInfoFlat
  edges: ThreadEdgeFlat & {
    node: ThreadFlat & {
      author: UserFlat
      entry: PostFlat
      replies?: PostFlat
    }
  }
  aggregate: AggregateThreadFlat
}

export type ThreadEdgeResponse = ThreadEdgeFlat & {
  node: ThreadFlat & {
    author: UserFlat & {
      posts?: PostFlat
    }
    entry: PostFlat & {
      author: UserFlat
    }
    replies?: PostFlat & {
      author: UserFlat
    }
  }
}

export type AggregateThreadResponse = AggregateThreadFlat

export type UserConnectionResponse = {
  __typename: 'UserConnection'
  pageInfo: PageInfoFlat
  edges: UserEdgeFlat & {
    node: UserFlat & {
      posts?: PostFlat
    }
  }
  aggregate: AggregateUserFlat
}

export type UserEdgeResponse = UserEdgeFlat & {
  node: UserFlat & {
    posts?: PostFlat
  }
}

export type AggregateUserResponse = AggregateUserFlat

export type NodeResponse = NodeFlat

export type BatchPayloadResponse = BatchPayloadFlat

export type BoardSubscriptionPayloadResponse = BoardSubscriptionPayloadFlat & {
  node?: BoardFlat & {
    admins?: UserFlat & {
      posts?: PostFlat
    }
    members?: UserFlat & {
      posts?: PostFlat
    }
    threads?: ThreadFlat & {
      author: UserFlat
      entry: PostFlat
      replies?: PostFlat
    }
  }
  previousValues?: BoardPreviousValuesFlat
}

export type BoardPreviousValuesResponse = BoardPreviousValuesFlat

export type PostSubscriptionPayloadResponse = PostSubscriptionPayloadFlat & {
  node?: PostFlat & {
    author: UserFlat
  }
  previousValues?: PostPreviousValuesFlat
}

export type PostPreviousValuesResponse = PostPreviousValuesFlat

export type ThreadSubscriptionPayloadResponse = ThreadSubscriptionPayloadFlat & {
  node?: ThreadFlat & {
    author: UserFlat & {
      posts?: PostFlat
    }
    entry: PostFlat & {
      author: UserFlat
    }
    replies?: PostFlat & {
      author: UserFlat
    }
  }
  previousValues?: ThreadPreviousValuesFlat
}

export type ThreadPreviousValuesResponse = ThreadPreviousValuesFlat

export type UserSubscriptionPayloadResponse = UserSubscriptionPayloadFlat & {
  node?: UserFlat & {
    posts?: PostFlat
  }
  previousValues?: UserPreviousValuesFlat
}

export type UserPreviousValuesResponse = UserPreviousValuesFlat

/*
 *
 * Fragments
 *
 */

export type BoardFlat = {
  __typename: 'Board'
  id: string
  createdAt: string
}

export type UserFlat = {
  __typename: 'User'
  id: string
  nationality?: string | null
  email: string
  name?: string | null
}

export type PostFlat = {
  __typename: 'Post'
  id: string
  content?: string | null
  createdAt: string
  published: boolean
  title: string
  updatedAt: string
}

export type ThreadFlat = {
  __typename: 'Thread'
  id: string
  createdAt: string
  name: string
}

export type PageInfoFlat = {
  __typename: 'PageInfo'
  hasNextPage: boolean
  hasPreviousPage: boolean
  startCursor?: string | null
  endCursor?: string | null
}

export type BoardEdgeFlat = {
  __typename: 'BoardEdge'
  cursor: string
}

export type AggregateBoardFlat = {
  __typename: 'AggregateBoard'
  count: number
}

export type PostEdgeFlat = {
  __typename: 'PostEdge'
  cursor: string
}

export type AggregatePostFlat = {
  __typename: 'AggregatePost'
  count: number
}

export type ThreadEdgeFlat = {
  __typename: 'ThreadEdge'
  cursor: string
}

export type AggregateThreadFlat = {
  __typename: 'AggregateThread'
  count: number
}

export type UserEdgeFlat = {
  __typename: 'UserEdge'
  cursor: string
}

export type AggregateUserFlat = {
  __typename: 'AggregateUser'
  count: number
}

export type NodeFlat = {
  id: string
}

export type BatchPayloadFlat = {
  __typename: 'BatchPayload'
  count: number
}

export type BoardSubscriptionPayloadFlat = {
  __typename: 'BoardSubscriptionPayload'
  mutation: MutationType
  updatedFields?: string[] | null
}

export type BoardPreviousValuesFlat = {
  __typename: 'BoardPreviousValues'
  id: string
  createdAt: string
}

export type PostSubscriptionPayloadFlat = {
  __typename: 'PostSubscriptionPayload'
  mutation: MutationType
  updatedFields?: string[] | null
}

export type PostPreviousValuesFlat = {
  __typename: 'PostPreviousValues'
  id: string
  content?: string | null
  createdAt: string
  published: boolean
  title: string
  updatedAt: string
}

export type ThreadSubscriptionPayloadFlat = {
  __typename: 'ThreadSubscriptionPayload'
  mutation: MutationType
  updatedFields?: string[] | null
}

export type ThreadPreviousValuesFlat = {
  __typename: 'ThreadPreviousValues'
  id: string
  createdAt: string
  name: string
}

export type UserSubscriptionPayloadFlat = {
  __typename: 'UserSubscriptionPayload'
  mutation: MutationType
  updatedFields?: string[] | null
}

export type UserPreviousValuesFlat = {
  __typename: 'UserPreviousValues'
  id: string
  nationality?: string | null
  email: string
  name?: string | null
}

