/*
 *
 * Code generated by Graphql Client Generator.
 * DO NOT EDIT.
 * Please don't change this file manually but run 'something' to update it.
 * For more information, please read the docs: https://doclink.com/
 *
 */

import {
  DateTime,
  Json,
  Long,
  ApplicationOrderByInput,
  ApplicationType,
  CandidateOrderByInput,
  CommentOrderByInput,
  DisqualificationOrderByInput,
  FieldInstanceOrderByInput,
  FieldOrderByInput,
  FieldType,
  FileOrderByInput,
  InviteOrderByInput,
  JobOrderByInput,
  JobType,
  LocationOrderByInput,
  ReviewInstanceOrderByInput,
  ReviewOrderByInput,
  SourceOrderByInput,
  StageOrderByInput,
  StageType,
  TagOrderByInput,
  TaskOrderByInput,
  UserOrderByInput,
  WorkflowOrderByInput
} from './types'

/*
 *
 * Responses
 *
 */

export type ApplicationResponse = ApplicationFlat & {
  disqualification?: DisqualificationInstanceFlat & {
    prototype: DisqualificationFlat
    createdBy: UserFlat & {
      tasks?: TaskFlat
      avatar?: FileFlat
    }
  }
  stage: StageFlat
  reviews?: ReviewInstanceFlat & {
    prototype?: ReviewFlat & {
      fields?: FieldFlat
    }
    fields?: FieldInstanceFlat & {
      prototype: FieldFlat
    }
    createdBy: UserFlat & {
      tasks?: TaskFlat
      avatar?: FileFlat
    }
  }
  job: JobFlat & {
    workspace: WorkspaceFlat & {
      users?: UserFlat
      candidates?: CandidateFlat
      workflows?: WorkflowFlat
      invites?: InviteFlat
    }
    workflow: WorkflowFlat & {
      stages?: StageFlat
      disqualifications?: DisqualificationFlat
      fields?: FieldFlat
      reviews?: ReviewFlat & {
        fields?: FieldFlat
      }
    }
    comments?: CommentFlat & {
      createdBy: UserFlat
    }
    locations?: LocationFlat
  }
  candidate: CandidateFlat & {
    avatar?: FileFlat
    resumesFile?: FileFlat
    coverLettersFile?: FileFlat
    tags?: TagFlat
    sources?: SourceFlat
    fields?: FieldInstanceFlat & {
      prototype: FieldFlat
    }
    tasks?: TaskFlat & {
      owners?: UserFlat
    }
    comments?: CommentFlat & {
      createdBy: UserFlat
    }
  }
}

export type DisqualificationInstanceResponse = DisqualificationInstanceFlat & {
  prototype: DisqualificationFlat
  createdBy: UserFlat & {
    tasks?: TaskFlat & {
      candidate?: CandidateFlat
    }
    avatar?: FileFlat
  }
}

export type DisqualificationResponse = DisqualificationFlat

export type UserResponse = UserFlat & {
  tasks?: TaskFlat & {
    candidate?: CandidateFlat & {
      avatar?: FileFlat
      resumesFile?: FileFlat
      coverLettersFile?: FileFlat
      tags?: TagFlat
      sources?: SourceFlat
      fields?: FieldInstanceFlat & {
        prototype: FieldFlat
      }
      applications?: ApplicationFlat
      comments?: CommentFlat
    }
  }
  avatar?: FileFlat
}

export type TaskResponse = TaskFlat & {
  owners?: UserFlat & {
    avatar?: FileFlat
  }
  candidate?: CandidateFlat & {
    avatar?: FileFlat
    resumesFile?: FileFlat
    coverLettersFile?: FileFlat
    tags?: TagFlat
    sources?: SourceFlat
    fields?: FieldInstanceFlat & {
      prototype: FieldFlat
    }
    applications?: ApplicationFlat & {
      disqualification?: DisqualificationInstanceFlat
      stage: StageFlat
      reviews?: ReviewInstanceFlat
      job: JobFlat
    }
    comments?: CommentFlat & {
      createdBy: UserFlat
    }
  }
}

export type CandidateResponse = CandidateFlat & {
  avatar?: FileFlat
  resumesFile?: FileFlat
  coverLettersFile?: FileFlat
  tags?: TagFlat
  sources?: SourceFlat
  fields?: FieldInstanceFlat & {
    prototype: FieldFlat
  }
  tasks?: TaskFlat & {
    owners?: UserFlat & {
      avatar?: FileFlat
    }
  }
  applications?: ApplicationFlat & {
    disqualification?: DisqualificationInstanceFlat & {
      prototype: DisqualificationFlat
      createdBy: UserFlat
    }
    stage: StageFlat
    reviews?: ReviewInstanceFlat & {
      prototype?: ReviewFlat & {
        fields?: FieldFlat
      }
      fields?: FieldInstanceFlat & {
        prototype: FieldFlat
      }
      createdBy: UserFlat
    }
    job: JobFlat & {
      workspace: WorkspaceFlat
      workflow: WorkflowFlat
      comments?: CommentFlat
      locations?: LocationFlat
    }
  }
  comments?: CommentFlat & {
    createdBy: UserFlat & {
      tasks?: TaskFlat
      avatar?: FileFlat
    }
  }
}

export type FileResponse = FileFlat

export type TagResponse = TagFlat

export type SourceResponse = SourceFlat

export type FieldInstanceResponse = FieldInstanceFlat & {
  prototype: FieldFlat
}

export type FieldResponse = FieldFlat

export type CommentResponse = CommentFlat & {
  createdBy: UserFlat & {
    tasks?: TaskFlat & {
      candidate?: CandidateFlat
    }
    avatar?: FileFlat
  }
}

export type StageResponse = StageFlat

export type ReviewInstanceResponse = ReviewInstanceFlat & {
  prototype?: ReviewFlat & {
    fields?: FieldFlat
  }
  fields?: FieldInstanceFlat & {
    prototype: FieldFlat
  }
  createdBy: UserFlat & {
    tasks?: TaskFlat & {
      candidate?: CandidateFlat
    }
    avatar?: FileFlat
  }
}

export type ReviewResponse = ReviewFlat & {
  fields?: FieldFlat
}

export type JobResponse = JobFlat & {
  workspace: WorkspaceFlat & {
    users?: UserFlat & {
      tasks?: TaskFlat
      avatar?: FileFlat
    }
    candidates?: CandidateFlat & {
      avatar?: FileFlat
      resumesFile?: FileFlat
      coverLettersFile?: FileFlat
      tags?: TagFlat
      sources?: SourceFlat
      fields?: FieldInstanceFlat & {
        prototype: FieldFlat
      }
      tasks?: TaskFlat
      applications?: ApplicationFlat
      comments?: CommentFlat
    }
    workflows?: WorkflowFlat & {
      stages?: StageFlat
      disqualifications?: DisqualificationFlat
      fields?: FieldFlat
      reviews?: ReviewFlat & {
        fields?: FieldFlat
      }
    }
    invites?: InviteFlat & {
      invitedBy: UserFlat
    }
  }
  applications?: ApplicationFlat & {
    disqualification?: DisqualificationInstanceFlat & {
      prototype: DisqualificationFlat
      createdBy: UserFlat
    }
    stage: StageFlat
    reviews?: ReviewInstanceFlat & {
      prototype?: ReviewFlat & {
        fields?: FieldFlat
      }
      fields?: FieldInstanceFlat & {
        prototype: FieldFlat
      }
      createdBy: UserFlat
    }
    candidate: CandidateFlat & {
      avatar?: FileFlat
      resumesFile?: FileFlat
      coverLettersFile?: FileFlat
      tags?: TagFlat
      sources?: SourceFlat
      fields?: FieldInstanceFlat & {
        prototype: FieldFlat
      }
      tasks?: TaskFlat
      comments?: CommentFlat
    }
  }
  workflow: WorkflowFlat & {
    stages?: StageFlat
    disqualifications?: DisqualificationFlat
    fields?: FieldFlat
    reviews?: ReviewFlat & {
      fields?: FieldFlat
    }
  }
  comments?: CommentFlat & {
    createdBy: UserFlat & {
      tasks?: TaskFlat
      avatar?: FileFlat
    }
  }
  locations?: LocationFlat
}

export type WorkspaceResponse = WorkspaceFlat & {
  users?: UserFlat & {
    tasks?: TaskFlat & {
      candidate?: CandidateFlat
    }
    avatar?: FileFlat
  }
  jobs?: JobFlat & {
    applications?: ApplicationFlat & {
      disqualification?: DisqualificationInstanceFlat
      stage: StageFlat
      reviews?: ReviewInstanceFlat
      candidate: CandidateFlat
    }
    workflow: WorkflowFlat & {
      stages?: StageFlat
      disqualifications?: DisqualificationFlat
      fields?: FieldFlat
      reviews?: ReviewFlat & {
        fields?: FieldFlat
      }
    }
    comments?: CommentFlat & {
      createdBy: UserFlat
    }
    locations?: LocationFlat
  }
  candidates?: CandidateFlat & {
    avatar?: FileFlat
    resumesFile?: FileFlat
    coverLettersFile?: FileFlat
    tags?: TagFlat
    sources?: SourceFlat
    fields?: FieldInstanceFlat & {
      prototype: FieldFlat
    }
    tasks?: TaskFlat & {
      owners?: UserFlat
    }
    applications?: ApplicationFlat & {
      disqualification?: DisqualificationInstanceFlat
      stage: StageFlat
      reviews?: ReviewInstanceFlat
      job: JobFlat
    }
    comments?: CommentFlat & {
      createdBy: UserFlat
    }
  }
  workflows?: WorkflowFlat & {
    jobs?: JobFlat & {
      applications?: ApplicationFlat
      comments?: CommentFlat
      locations?: LocationFlat
    }
    stages?: StageFlat
    disqualifications?: DisqualificationFlat
    fields?: FieldFlat
    reviews?: ReviewFlat & {
      fields?: FieldFlat
    }
  }
  invites?: InviteFlat & {
    invitedBy: UserFlat & {
      tasks?: TaskFlat
      avatar?: FileFlat
    }
  }
}

export type WorkflowResponse = WorkflowFlat & {
  jobs?: JobFlat & {
    workspace: WorkspaceFlat & {
      users?: UserFlat
      candidates?: CandidateFlat
      invites?: InviteFlat
    }
    applications?: ApplicationFlat & {
      disqualification?: DisqualificationInstanceFlat
      stage: StageFlat
      reviews?: ReviewInstanceFlat
      candidate: CandidateFlat
    }
    comments?: CommentFlat & {
      createdBy: UserFlat
    }
    locations?: LocationFlat
  }
  stages?: StageFlat
  disqualifications?: DisqualificationFlat
  fields?: FieldFlat
  reviews?: ReviewFlat & {
    fields?: FieldFlat
  }
}

export type InviteResponse = InviteFlat & {
  invitedBy: UserFlat & {
    tasks?: TaskFlat & {
      candidate?: CandidateFlat
    }
    avatar?: FileFlat
  }
}

export type LocationResponse = LocationFlat

export type ApplicationConnectionResponse = {
  __typename: 'ApplicationConnection'
  pageInfo: PageInfoFlat
  edges: ApplicationEdgeFlat & {
    node: ApplicationFlat & {
      disqualification?: DisqualificationInstanceFlat
      stage: StageFlat
      reviews?: ReviewInstanceFlat
      job: JobFlat
      candidate: CandidateFlat
    }
  }
  aggregate: AggregateApplicationFlat
}

export type PageInfoResponse = PageInfoFlat

export type ApplicationEdgeResponse = ApplicationEdgeFlat & {
  node: ApplicationFlat & {
    disqualification?: DisqualificationInstanceFlat & {
      prototype: DisqualificationFlat
      createdBy: UserFlat
    }
    stage: StageFlat
    reviews?: ReviewInstanceFlat & {
      prototype?: ReviewFlat & {
        fields?: FieldFlat
      }
      fields?: FieldInstanceFlat & {
        prototype: FieldFlat
      }
      createdBy: UserFlat
    }
    job: JobFlat & {
      workspace: WorkspaceFlat
      workflow: WorkflowFlat
      comments?: CommentFlat
      locations?: LocationFlat
    }
    candidate: CandidateFlat & {
      avatar?: FileFlat
      resumesFile?: FileFlat
      coverLettersFile?: FileFlat
      tags?: TagFlat
      sources?: SourceFlat
      fields?: FieldInstanceFlat & {
        prototype: FieldFlat
      }
      tasks?: TaskFlat
      comments?: CommentFlat
    }
  }
}

export type AggregateApplicationResponse = AggregateApplicationFlat

export type CandidateConnectionResponse = {
  __typename: 'CandidateConnection'
  pageInfo: PageInfoFlat
  edges: CandidateEdgeFlat & {
    node: CandidateFlat & {
      avatar?: FileFlat
      resumesFile?: FileFlat
      coverLettersFile?: FileFlat
      tags?: TagFlat
      sources?: SourceFlat
      fields?: FieldInstanceFlat & {
        prototype: FieldFlat
      }
      tasks?: TaskFlat
      applications?: ApplicationFlat
      comments?: CommentFlat
    }
  }
  aggregate: AggregateCandidateFlat
}

export type CandidateEdgeResponse = CandidateEdgeFlat & {
  node: CandidateFlat & {
    avatar?: FileFlat
    resumesFile?: FileFlat
    coverLettersFile?: FileFlat
    tags?: TagFlat
    sources?: SourceFlat
    fields?: FieldInstanceFlat & {
      prototype: FieldFlat
    }
    tasks?: TaskFlat & {
      owners?: UserFlat
    }
    applications?: ApplicationFlat & {
      disqualification?: DisqualificationInstanceFlat
      stage: StageFlat
      reviews?: ReviewInstanceFlat
      job: JobFlat
    }
    comments?: CommentFlat & {
      createdBy: UserFlat
    }
  }
}

export type AggregateCandidateResponse = AggregateCandidateFlat

export type JobConnectionResponse = {
  __typename: 'JobConnection'
  pageInfo: PageInfoFlat
  edges: JobEdgeFlat & {
    node: JobFlat & {
      workspace: WorkspaceFlat
      applications?: ApplicationFlat
      workflow: WorkflowFlat
      comments?: CommentFlat
      locations?: LocationFlat
    }
  }
  aggregate: AggregateJobFlat
}

export type JobEdgeResponse = JobEdgeFlat & {
  node: JobFlat & {
    workspace: WorkspaceFlat & {
      users?: UserFlat
      candidates?: CandidateFlat
      workflows?: WorkflowFlat
      invites?: InviteFlat
    }
    applications?: ApplicationFlat & {
      disqualification?: DisqualificationInstanceFlat
      stage: StageFlat
      reviews?: ReviewInstanceFlat
      candidate: CandidateFlat
    }
    workflow: WorkflowFlat & {
      stages?: StageFlat
      disqualifications?: DisqualificationFlat
      fields?: FieldFlat
      reviews?: ReviewFlat & {
        fields?: FieldFlat
      }
    }
    comments?: CommentFlat & {
      createdBy: UserFlat
    }
    locations?: LocationFlat
  }
}

export type AggregateJobResponse = AggregateJobFlat

export type SourceConnectionResponse = {
  __typename: 'SourceConnection'
  pageInfo: PageInfoFlat
  edges: SourceEdgeFlat & {
    node: SourceFlat
  }
  aggregate: AggregateSourceFlat
}

export type SourceEdgeResponse = SourceEdgeFlat & {
  node: SourceFlat
}

export type AggregateSourceResponse = AggregateSourceFlat

export type TagConnectionResponse = {
  __typename: 'TagConnection'
  pageInfo: PageInfoFlat
  edges: TagEdgeFlat & {
    node: TagFlat
  }
  aggregate: AggregateTagFlat
}

export type TagEdgeResponse = TagEdgeFlat & {
  node: TagFlat
}

export type AggregateTagResponse = AggregateTagFlat

export type TaskConnectionResponse = {
  __typename: 'TaskConnection'
  pageInfo: PageInfoFlat
  edges: TaskEdgeFlat & {
    node: TaskFlat & {
      owners?: UserFlat
      candidate?: CandidateFlat
    }
  }
  aggregate: AggregateTaskFlat
}

export type TaskEdgeResponse = TaskEdgeFlat & {
  node: TaskFlat & {
    owners?: UserFlat & {
      avatar?: FileFlat
    }
    candidate?: CandidateFlat & {
      avatar?: FileFlat
      resumesFile?: FileFlat
      coverLettersFile?: FileFlat
      tags?: TagFlat
      sources?: SourceFlat
      fields?: FieldInstanceFlat & {
        prototype: FieldFlat
      }
      applications?: ApplicationFlat
      comments?: CommentFlat
    }
  }
}

export type AggregateTaskResponse = AggregateTaskFlat

export type UserConnectionResponse = {
  __typename: 'UserConnection'
  pageInfo: PageInfoFlat
  edges: UserEdgeFlat & {
    node: UserFlat & {
      tasks?: TaskFlat
      avatar?: FileFlat
    }
  }
  aggregate: AggregateUserFlat
}

export type UserEdgeResponse = UserEdgeFlat & {
  node: UserFlat & {
    tasks?: TaskFlat & {
      candidate?: CandidateFlat
    }
    avatar?: FileFlat
  }
}

export type AggregateUserResponse = AggregateUserFlat

export type WorkflowConnectionResponse = {
  __typename: 'WorkflowConnection'
  pageInfo: PageInfoFlat
  edges: WorkflowEdgeFlat & {
    node: WorkflowFlat & {
      jobs?: JobFlat
      stages?: StageFlat
      disqualifications?: DisqualificationFlat
      fields?: FieldFlat
      reviews?: ReviewFlat & {
        fields?: FieldFlat
      }
    }
  }
  aggregate: AggregateWorkflowFlat
}

export type WorkflowEdgeResponse = WorkflowEdgeFlat & {
  node: WorkflowFlat & {
    jobs?: JobFlat & {
      workspace: WorkspaceFlat
      applications?: ApplicationFlat
      comments?: CommentFlat
      locations?: LocationFlat
    }
    stages?: StageFlat
    disqualifications?: DisqualificationFlat
    fields?: FieldFlat
    reviews?: ReviewFlat & {
      fields?: FieldFlat
    }
  }
}

export type AggregateWorkflowResponse = AggregateWorkflowFlat

export type BatchPayloadResponse = BatchPayloadFlat

/*
 *
 * Fragments
 *
 */

export type ApplicationFlat = {
  __typename: 'Application'
  createdAt: string
  id: string
  updatedAt: string
  type: ApplicationType
}

export type DisqualificationInstanceFlat = {
  __typename: 'DisqualificationInstance'
  id: string
  createdAt: string
  updatedAt: string
  content?: string | null
}

export type DisqualificationFlat = {
  __typename: 'Disqualification'
  id: string
  createdAt: string
  updatedAt: string
  name: string
  description?: string | null
}

export type UserFlat = {
  __typename: 'User'
  id: string
  createdAt: string
  updatedAt: string
  settings?: any | null
  firstName: string
  lastName: string
  email: string
  username: string
  lastLogin?: string | null
  deletedAt?: string | null
  position?: string | null
}

export type TaskFlat = {
  __typename: 'Task'
  id: string
  createdAt: string
  updatedAt: string
  title?: string | null
  description?: string | null
  dueAt?: string | null
}

export type FileFlat = {
  __typename: 'File'
  id: string
  createdAt: string
  updatedAt: string
  size: number
  type: string
  name: string
  url: string
}

export type StageFlat = {
  __typename: 'Stage'
  id: string
  createdAt: string
  updatedAt: string
  name: string
  description?: string | null
  type: StageType
  index: number
}

export type ReviewInstanceFlat = {
  __typename: 'ReviewInstance'
  id: string
  createdAt: string
  updatedAt: string
  rating?: number | null
  content?: string | null
}

export type ReviewFlat = {
  __typename: 'Review'
  id: string
  createdAt: string
  updatedAt: string
  name: string
}

export type FieldFlat = {
  __typename: 'Field'
  id: string
  createdAt: string
  updatedAt: string
  type: FieldType
  label: string
  description?: string | null
}

export type FieldInstanceFlat = {
  __typename: 'FieldInstance'
  id: string
  createdAt: string
  updatedAt: string
  value?: string | null
}

export type JobFlat = {
  __typename: 'Job'
  id: string
  createdAt: string
  updatedAt: string
  type: JobType
  department?: string | null
  name: string
  excerpt?: string | null
  companyDescription?: string | null
  description?: string | null
  requirements?: string | null
}

export type WorkspaceFlat = {
  __typename: 'Workspace'
  id: string
  createdAt: string
  updatedAt: string
  settings?: any | null
  name: string
}

export type CandidateFlat = {
  __typename: 'Candidate'
  id: string
  createdAt: string
  updatedAt: string
  firstName?: string | null
  lastName?: string | null
  emails: string[]
  phones: string[]
  links: string[]
  company?: string | null
  headline?: string | null
  position?: string | null
  resumesString: string[]
  coverLettersString: string[]
}

export type WorkflowFlat = {
  __typename: 'Workflow'
  id: string
  createdAt: string
  updatedAt: string
  name: string
  description?: string | null
}

export type InviteFlat = {
  __typename: 'Invite'
  id: string
  createdAt: string
  updatedAt: string
  email: string
  expireAt: string
}

export type CommentFlat = {
  __typename: 'Comment'
  id: string
  createdAt: string
  updatedAt: string
  content: string
}

export type LocationFlat = {
  __typename: 'Location'
  id: string
  createdAt: string
  updatedAt: string
  country: string
  region?: string | null
  city: string
  zip?: string | null
}

export type TagFlat = {
  __typename: 'Tag'
  id: string
  createdAt: string
  updatedAt: string
  label: string
  description?: string | null
}

export type SourceFlat = {
  __typename: 'Source'
  id: string
  createdAt: string
  updatedAt: string
  label: string
  description?: string | null
}

export type PageInfoFlat = {
  __typename: 'PageInfo'
  hasNextPage: boolean
  hasPreviousPage: boolean
  startCursor?: string | null
  endCursor?: string | null
}

export type ApplicationEdgeFlat = {
  __typename: 'ApplicationEdge'
  cursor: string
}

export type AggregateApplicationFlat = {
  __typename: 'AggregateApplication'
  count: number
}

export type CandidateEdgeFlat = {
  __typename: 'CandidateEdge'
  cursor: string
}

export type AggregateCandidateFlat = {
  __typename: 'AggregateCandidate'
  count: number
}

export type JobEdgeFlat = {
  __typename: 'JobEdge'
  cursor: string
}

export type AggregateJobFlat = {
  __typename: 'AggregateJob'
  count: number
}

export type SourceEdgeFlat = {
  __typename: 'SourceEdge'
  cursor: string
}

export type AggregateSourceFlat = {
  __typename: 'AggregateSource'
  count: number
}

export type TagEdgeFlat = {
  __typename: 'TagEdge'
  cursor: string
}

export type AggregateTagFlat = {
  __typename: 'AggregateTag'
  count: number
}

export type TaskEdgeFlat = {
  __typename: 'TaskEdge'
  cursor: string
}

export type AggregateTaskFlat = {
  __typename: 'AggregateTask'
  count: number
}

export type UserEdgeFlat = {
  __typename: 'UserEdge'
  cursor: string
}

export type AggregateUserFlat = {
  __typename: 'AggregateUser'
  count: number
}

export type WorkflowEdgeFlat = {
  __typename: 'WorkflowEdge'
  cursor: string
}

export type AggregateWorkflowFlat = {
  __typename: 'AggregateWorkflow'
  count: number
}

export type BatchPayloadFlat = {
  __typename: 'BatchPayload'
  count: number
}

